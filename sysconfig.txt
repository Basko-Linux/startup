Files in /etc/sysconfig
=======================

/etc/sysconfig/clock:

  deprecated values from earlier releases:

    CLOCKMODE=GMT indicates that the clock is set to UTC
    CLOCKMODE=ARC on alpha only indicates the ARC console's
      42-year time offset is in effect

  currently correct values:

    UTC=true indicates that the clock is set to UTC; anything
      else indicates that it is set to local time
    ARC=true on alpha only indicates the ARC console's
      42-year time offset is in effect; otherwise the normal
      Unix epoch is assumed
    ZONE="filename" indicates the zonefile under /usr/share/zoneinfo
      that /etc/localtime is a copy of, for example:
        ZONE="US/Eastern"

/etc/sysconfig/desktop:
  DESKTOP=GNOME|KDE|AnotherLevel
     This determines the display manager started by /etc/X11/prefdm
  

/etc/sysconfig/init:

  BOOTUP=<some bootup mode>
     BOOTUP=color means new (as of RH6.0) boot display. 
     BOOTUP=verbose means old style display
     Anything else means new display, but without ANSI-formatting
  LOGLEVEL=<a number>
     Sets the initial console logging level for the kernel.
     The default is 7. 8 means everything (including debugging);
     1 means nothing except kernel panics. syslogd will override
     this once it starts.
  RES_COL=<a number>
     Column of the screen to start status labels at. Defaults to 60
  MOVE_TO_COL=<a command>
     A command to move the cursor to $RES_COL. Defaults to nasty
     ANSI sequences output by echo -e.
  SETCOLOR_SUCCESS=<a command>
     A command to set the color to a color indicating success.
     Defaults to nasty ANSI sequences output by echo -e setting
     the color to green.
  SETCOLOR_FAILURE=<a command>
     A command to set the color to a color indicating failure.
     Defaults to nasty ANSI sequences output by echo -e setting
     the color to red.
  SETCOLOR_WARNING=<a command>
     A command to set the color to a color indicating warning.
     Defaults to nasty ANSI sequences output by echo -e setting
     the color to yellow.
  SETCOLOR_NORMAL=<a command>
     A command to set the color to 'normal'. Defaults to nasty
     ANSI sequences output by echo -e.
  MAGIC_SYSRQ=yes|no
     Set to 'no' to disable the magic sysrq key, and Stop-A (break
     on serial console.) on SPARC.
  PROMPT=yes|no
     Set to 'no' to disable the key check for interactive mode.

/etc/sysconfig/keyboard:

  KEYTABLE=<keytable file>
     for example: KEYTABLE="/usr/lib/kbd/keytables/us.map"
    
     If you dump a keymap (using 'dumpkeys') to
	/etc/sysconfig/console/default.kmap
     it will be loaded on bootup before filesystems are mounted/checked.
     This could be useful if you need to emergency type the root password.
     This has to be a dumped keymap, as opposed to copying the shipped
     keymap files, as the shipped files include other maps from the
     /usr/lib/kbd/keytables directory.
     
  KEYBOARDTYPE=sun|pc
    on SPARC only, sun means a sun keyboard is attached on /dev/kbd,
    pc means a PS/2 keyboard is on ps/2 port.
  
/etc/sysconfig/system:

    SECURITY=[number]
	  The level of security, see /usr/doc/msec*/ for more info about
	  security level.

	TYPE=workstation|develper|server
	  The type install of the machine.

	CLEAN_TMP=[number]
	   If you want to clean up your /tmp dir specify a number how long
	   it will take.
	
	CLASS=expert|medium|newbie
		The type of the profil of the main person who use this machine.

/etc/sysconfig/mouse:

  MOUSETYPE=microsoft|mouseman|mousesystems|ps/2|msbm|logibm|atibm|
    logitech|mmseries|mmhittab
  XEMU3=yes|no (emulate three buttons with two buttons whenever
    necessary, most notably in X)

  In addition, /dev/mouse points to the mouse device.

/etc/sysconfig/network:

  NETWORKING=yes|no
  HOSTNAME=<fqdn by default, but whatever hostname you want>
    Note: for compatibility with some old software people might
    install (like trn), the /etc/HOSTNAME file should contain the
    same value as here.
  FORWARD_IPV4=yes|no (The current Red Hat Linux installation
    sets this to no by default for RFC compliance, but if
    FORWARD_IPV4 is not set at all, forwarding is *enabled*
    for compatibility with the configuration files used on
    Red Hat Linux versions 4.2 and earlier.)
  DEFRAG_IPV4=yes|no
    Set this if you want to automatically defragment IPv4
    packets. This is a good idea for masquerading, and
    a bad idea otherwise. It defaults to 'no'.
  GATEWAY=<gateway IP>
  GATEWAYDEV=<gateway device> (e.g. eth0)
  NISDOMAIN=<nis domain name>
  IPX=yes|no
  IPXAUTOPRIMARY=on|off (note, that MUST be on|off, not yes|no)
  IPXAUTOFRAME=on|off (again, not yes|no)
  IPXINTERNALNETNUM=<netnum>
  IPXINTERNALNODENUM=<nodenum>

  All the IPX stuff is optional, and should default to off.

/etc/sysconfig/static-routes:

  Contains lines of the form:

    <device> net <network> netmask <netmask> gw <gateway>

  <device> may be a device name to have the route brought up and
  down with the device, or "any" to have the correct devices calculated
  at run time.

/etc/sysconfig/routed:

  SILENT=yes|no
  EXPORT_GATEWAY=yes|no

/etc/sysconfig/pcmcia:

  PCMCIA=yes|no
  PCIC=i82365|tcic
  PCIC_OPTS=<socket driver (i82365 or tcic) timing parameters>
  CORE_OPTS=<pcmcia_core options>
  CARDMGR_OPTS=<cardmgr options>

/etc/sysconfig/amd:

  ADIR=/.automount  (normally never changed)
  MOUNTPTS='/net /etc/amd.conf'  (standard automount stuff)
  AMDOPTS=  (extra options for AMD)

/etc/sysconfig/tape:

  DEV=/dev/nst0
    Tape device.  Use the non-rewinding one for these scripts.
  
    For SCSI tapes this is /dev/nst#, where # is the number of the
    tape drive you want to use.  If you only have one then use
    nst0.
 
    For IDE tapes you use /dev/ht#, where # is the number of the tape
    drive you want to use (usually ht0).
 
    For floppy tape drives use /dev/ftape.

  ADMIN=root
    Person to mail to if the backup fails for any reason

  SLEEP=5
    Time to sleep between tape operations.  Some drives need a bit
    more than others, but 5 seems to work for 8mm, 4mm, and DLT

  BLOCKSIZE=32768
    This worked fine for 8mm, then 4mm, and now DLT.  An optimal
    setting is probably however much data your drive writes at one
    time.

  SHORTDATE=$(date +%y:%m:%d:%H:%M)
    A short date string, used in backup log filenames.

  DAY=$(date +log-%y:%m:%d)
    This is used for the log file directory.

  DATE=$(date)
    Regular date string, used in log files.

  LOGROOT=/var/log/backup
    Root of the logging directory

  LIST=$LOGROOT/incremental-list
    This is the file name the incremental backup will use to store
    the incremental list.  It will be $LIST-{some number}.

  DOTCOUNT=$LOGROOT/.count
    For counting as you go to know which incremental list to use

  COUNTER=$LOGROOT/counter-file
    For rewinding when done...might not use.

  BACKUPTAB=/etc/backuptab
    The file in which we keep our list of backup(s) we want to make.

/etc/sysconfig/sendmail:
  DAEMON=yes|no
    yes implies -bd
  QUEUE=1h
    given to sendmail as -q$QUEUE
    -q option is not given to sendmail if /etc/sysconfig/sendmail
    exists and QUEUE is empty or undefined.

/etc/sysconfig/i18n

  LANG= set locale for all categories, can be any two letter ISO
    language code
  LC_CTYPE= localedata configuration for classification and conversion
    of characters
  LC_COLLATE= localedata configuration for collation (sort order) of
    strings
  LC_MESSAGES= localedata configuration for translation of yes and no
    messages
  LC_NUMERIC= localedata configuration for non-monetary numeric data
  LC_MONETARY= localedata configuration for monetary data
  LC_TIME= localedata configuration for date and time
  LC_ALL= localedata configuration overriding all of the above
  LANGUAGE= can be a : separated list of ISO language codes
  LINGUAS= can be a ' ' separated list of ISO language codes

  The above variables are used in /etc/profile.d/lang.sh.

  SYSFONT= any font that is legal when used as
	/usr/bin/consolechars -f $SYSFONT ...
    (See console-tools package for consolechars command)

  UNIMAP= any SFM (screen font map, formerly called Unicode mapping
    table - see consolechars(8))
	/usr/bin/consolechars -f $SYSFONT --sfm $UNIMAP
 
  SYSFONTACM= any ACM (application charset map - see consolechars(8))
        /usr/bin/consolechars -f $SYSFONT --acm $SYSFONTACM
 
  The above is used by the /sbin/setsysfont command (which is run
  by rc.sysinit at boot time.)


Files in /etc/sysconfig/network-scripts/
========================================

/etc/sysconfig/network-scripts/ifup:
/etc/sysconfig/network-scripts/ifdown:

  Symlinks to /sbin/ifup and /sbin/ifdown, respectively.
  These are the only two scripts "in" this directory that should
  be called directly; these two scripts call all the other
  scripts as needed.  These symlinks are here for legacy purposes
  only -- they'll will probably be removed in future versions, so
  only /sbin/ifup and /sbin/ifdown should currently be used.

  These scripts take one argument normally: the name of the device
  (e.g. eth0).  They are called with a second argument of "boot"
  during the boot sequence so that devices that are not meant to
  be brought up on boot (ONBOOT=no, see below) can be ignored at
  that time.

/etc/sysconfig/network-scripts/network-functions:

  Not really a public file.  Contains functions which the scripts use
  for bringing interfaces up and down.  In particular, it contains
  most of the code for handling alternative interface configurations
  and interface change notification through netreport.

/etc/sysconfig/network-scripts/ifcfg-<interface-name> and
/etc/sysconfig/network-scripts/ifcfg-<interface-name>-<clone-name>:

  The first defines an interface, and the second contains
  only the parts of the definition that are different in a
  "clone" (or alternative) interface.  For example, the
  network numbers might be different, but everything else
  might be the same, so only the network numbers would be
  in the clone file, but all the device information would
  be in the base ifcfg file.

  The items that can be defined in an ifcfg file depend on the
  interface type.  The really obvious ones I'm not going to
  bother to define; you can figure out what "IPADDR" is, I
  think...  :-)

  Base items:
    NAME=<friendly name for users to see>
      Most important for PPP.  Only used in front ends.
    DEVICE=<name of physical device (except dynamically-allocated PPP
      devices where it is the "logical name")>
    IPADDR=
    NETMASK=
    GATEWAY=
    ONBOOT=yes|no
    USERCTL=yes|no
    BOOTPROTO=none|bootp|dhcp|pump
    DHCP_CLIENT=
    PEERDNS=yes|no
      modify /etc/resolv.conf if peer uses msdns extension (PPP only) or
      DNS{1,2} are set, default to "yes".
    DNS{1,2}=<ipaddress>
      provide DNS addresses that are dropped into the resolv.conf
      file if PEERDNS is not set to "no".

  If BOOTPROTO is not "none", then the only other item that
  must be set is the DEVICE item; all the rest will be determined
  by the boot protocol.  No "dummy" entries need to be created.
  
  You can specify which dhcp client to use with the DHCP_CLIENT, if
  the DHCP_CLIENT is not specified we trying to launch in order :
      /sbin/dhcpxd
      /sbin/dhclient
      /sbin/dhcpcd
      /sbin/pump
  if you have a preferred client define the DHCP_CLIENT variable.

  Base items being deprecated:
    NETWORK=<will be calculated automatically with ifcalc>
    BROADCAST=<will be calculated automatically with ifcalc>

  Ethernet-only items:
    {IPXNETNUM,IPXPRIMARY,IPXACTIVE}_{802_2,802_3,ETHERII,SNAP}
    configuration matrix for IPX.  Only used if IPX is active.
    Managed from /etc/sysconfig/network-scripts/ifup-ipx
    ARP=yes|no (adds 'arp' flag to ifconfig, for use with the
      ethertap device)

  PPP/SLIP items:
    PERSIST=yes|no
    MODEMPORT=<device, say /dev/modem>
    LINESPEED=<speed, say 115200>
    DEFABORT=yes|no (tells netcfg whether or not to put default
      abort strings in when creating/editing the chat script and/or
      dip script for this interface)
      (meaningless with WVDIALSECT)
 
  PPP-specific items
    WVDIALSECT=<list of sections from wvdial.conf to use>
      If this variable is set, then the chat script (if it
      exists) is ignored, and wvdial is used to open the
      PPP connection.
    DEFROUTE=yes|no (set this interface as default route? yes is
default)
    DEBUG=yes|no (defaults to yes)
      turns on/off pppd and chat (if used) debugging.
    ESCAPECHARS=yes|no (simplified interface here doesn't let people
      specify which characters to escape; almost everyone can use
      asyncmap 00000000 anyway, and they can set PPPOPTIONS to
      asyncmap foobar if they want to set options perfectly)
    HARDFLOWCTL=yes|no (yes imples "modem crtscts" options)
    PPPOPTIONS=<arbitrary option string; is placed last on the
      command line, so it can override other options like asyncmap
      that were specified differently>
    PAPNAME=<"name $PAPNAME" on pppd command line> (note that
      the "remotename" option is always specified as the logical
      ppp device name, like "ppp0" (which might perhaps be the
      physical device ppp1 if some other ppp device was brought
      up earlier...), which makes it easy to manage pap/chap
      files -- name/password pairs are associated with the
      logical ppp device name so that they can be managed
      together.
    REMIP=<remote ip address, normally unspecified>
    MTU=
    MRU=
    DISCONNECTTIMEOUT=<number of seconds, default currently 5>
      (time to wait before re-establishing the connection after
      a successfully-connected session terminates before attempting
      to establish a new connection.)
    RETRYTIMEOUT=<number of seconds, default currently 60>
      (time to wait before re-attempting to establish a connection
      after a previous attempt fails.)
      
/etc/sysconfig/network-scripts/chat-<interface-name>:

  chat script for PPP or SLIP connection intended to establish
  the connection.  For SLIP devices, a DIP script is written
  from the chat script; for PPP devices, the chat script is used
  directly.

/etc/sysconfig/network-scripts/dip-<interface-name>

  A write-only script created from the chat script by netcfg.
  Do not modify this.  In the future, this file may disappear
  by default and created on-the-fly from the chat script if
  it does not exist.

/etc/sysconfig/network-scripts/ifup-post

  Called when any network device EXCEPT a SLIP device comes
  up.  Calls /etc/sysconfig/network-scripts/ifup-routes to
  bring up static routes that depend on that device.  Calls
  /etc/sysconfig/network-scripts/ifup-aliases to bring up
  aliases for that device.  Sets the hostname if it is not
  already set and a hostname can be found for the IP for that
  device.  Sends SIGIO to any programs that have requested
  notification of network events.

  Could be extended to fix up nameservice configuration, call
  arbitrary scripts, etc, as needed.

/etc/sysconfig/network-scripts/ifup-routes

  Set up static routes for a device.

/etc/sysconfig/network-scripts/ifup-aliases

  Bring up aliases for a device.

/etc/sysconfig/network-scripts/ifdhcpc-done

  Called by dhcpcd once dhcp configuration is complete; sets
  up /etc/resolv.conf from the version dhcpcd dropped in
  /etc/dhcpc/resolv.conf

